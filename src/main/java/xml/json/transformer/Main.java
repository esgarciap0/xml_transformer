package xml.json.transformer;

import org.w3c.dom.Document;
import xml.json.transformer.application.FileSystemAdapter;
import xml.json.transformer.domain.InvoiceData;

import javax.swing.*;
import java.io.File;

public class Main {
    public static void main(String[] args) throws Exception {
        // üß≠ Seleccionar el archivo XML de entrada
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Seleccione el archivo XML de entrada");
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Archivos XML (*.xml)", "xml"));

        int result = fileChooser.showOpenDialog(null);
        if (result != JFileChooser.APPROVE_OPTION) {
            JOptionPane.showMessageDialog(null, "‚ùå No se seleccion√≥ ning√∫n archivo. El proceso ha sido cancelado.");
            return;
        }

        File inputFile = fileChooser.getSelectedFile();
        String inXml = inputFile.getAbsolutePath();
        System.out.println("üìÇ Archivo XML seleccionado: " + inXml);

        // üóÇ Seleccionar carpeta de destino
        JFileChooser dirChooser = new JFileChooser();
        dirChooser.setDialogTitle("Seleccione la carpeta donde guardar los archivos generados");
        dirChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);

        int dirResult = dirChooser.showSaveDialog(null);
        if (dirResult != JFileChooser.APPROVE_OPTION) {
            JOptionPane.showMessageDialog(null, "‚ùå No se seleccion√≥ una carpeta de destino. El proceso ha sido cancelado.");
            return;
        }

        File outputDir = dirChooser.getSelectedFile();
        String outXml = outputDir.getAbsolutePath() + File.separator + "Modified.xml";
        String outJson = outputDir.getAbsolutePath() + File.separator + "Output.json";

        // üß± Adaptador del sistema de archivos
        FileSystemAdapter adapter = new FileSystemAdapter();

        // üß© Leer XML original
        Document doc = adapter.readXml(inXml);

        // ‚úÖ 1. Aplicar transformaciones del manual
        System.out.println("üõ† Aplicando transformaciones...");
        adapter.applyManualTransformations(doc);

        // ‚úÖ 2. Generar JSON
        System.out.println("üìÑ Generando JSON...");
        InvoiceData data = adapter.buildInvoiceData(doc);
        adapter.writeJson(data, outJson);

        // ‚úÖ 3. Guardar XML modificado
        System.out.println("üíæ Guardando XML modificado...");
        adapter.writeXml(doc, outXml);

        // ‚úÖ 4. Confirmaci√≥n visual
        JOptionPane.showMessageDialog(null,
                "‚úÖ Proceso completado exitosamente.\n\n" +
                        "üìò XML modificado: " + outXml + "\n" +
                        "üìó JSON generado: " + outJson,
                "Proceso finalizado",
                JOptionPane.INFORMATION_MESSAGE);

        System.out.println("üèÅ Proceso completado exitosamente.");
    }
}
